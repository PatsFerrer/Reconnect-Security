// chama a view cadastrar e passa um objeto vazio
		@GetMapping("/cadastrar")
		public ModelAndView cadastrar() {
			ModelAndView modelAndView = new ModelAndView("faleconosco/cadastro");
	 
			modelAndView.addObject("faleconosco", new FaleConosco());
	 
			return modelAndView;
		}
		
		//imagem
		 
		@PostMapping("/cadastrar")
		public ModelAndView cadastrar(FaleConosco faleconosco, @RequestParam("fileUsuario") MultipartFile file) throws IOException {
	 
			
		@ResponseBody
		
		
		@GetMapping("/{id}/editar")
		public ModelAndView editar(@PathVariable Long id) {
			ModelAndView modelAndView = new ModelAndView("faleconosco/edicao");
	 
			FaleConosco faleconosco = faleconoscoRepository.getReferenceById(id);
			modelAndView.addObject("faleconosco", faleconosco);
	 
			return modelAndView;
		}
		
		@PostMapping("/{id}/editar")
		public ModelAndView editar(FaleConosco faleconosco) {		
	 
			faleconoscoRepository.save(faleconosco);
			ModelAndView modelAndView = new ModelAndView("redirect:/faleconosco");
	 
			return modelAndView;
		}
		
		@GetMapping("/{id}/excluir")
		public ModelAndView excluir(@PathVariable Long id) {
			ModelAndView modelAndView = new ModelAndView("redirect:/faleconosco");
	 
			faleconoscoRepository.deleteById(id);
	 
			return modelAndView;
		}